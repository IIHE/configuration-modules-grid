# ${license-info}
# ${developer-info}
# ${author-info}
# ${build-info}
#
# Coding style: emulate <TAB> characters with 4 spaces, thanks!
################################################################################


package NCM::Component::lcas;

use strict;
use NCM::Component;
use vars qw(@ISA $EC);
@ISA = qw(NCM::Component);
$EC=LC::Exception::Context->new->will_store_all;
use NCM::Check;

use File::Path;

use EDG::WP4::CCM::Element;


local(*DTA);

##########################################################################
sub Configure($$@) {
##########################################################################
    
    my ($self, $config) = @_;

    # Define paths for convenience. 
    my $base = "/software/components/lcas";
    
    # Retrieve configuration
    my $lcas_config = $config->getElement($base)->getTree();

    # we will be cautious and only write the set of configuration
    # files if we are entirely successful in generating all of them
    # meanwhile, $cpath{$path} will retain the content
    my %cfiles=();

    my $dbpath = "/opt/edg/etc/lcas/lcas.db";
    if ( $config->{dbpath} ) {
        $dbpath = $config->{dbpath};
    }

    $cfiles{$dbpath}="";
    $cfiles{$dbpath}.="# LCAS plugin list\n generated by ncm-lcas as $dbpath.\n";
    $cfiles{$dbpath}.="# DO NOT EDIT BY HAND -- edit node configuration instead.\n";
    $cfiles{$dbpath}.="#\n";

    if ( $config->{module} ) {

        for my $mod_config (@{$config->{module}}) {
            # Path is mandatory in the schema
            $modname = $mod_config->{path};
            $self->debug(1,"LCAS: configuring module $modname");

            # Path is mandatory in the schema
            $cfiles{$dbpath}.="pluginname=".$modname};

            if ( $mod_config->{args} ) {
                $cfiles{$dbpath}.=",pluginargs=".$mod_config->{args},
            }
            $cfiles{$dbpath}.="\n";

            # optionally write the module configuration as well in a separate file
            if ( $mod_config->{conf} ) {
                my $cfname=$mod_config->{conf}->{path};
                $cfiles{$cfname}="";

                # may I write a header here?
                unless ( $mod_config->{conf}->{noheader} ) {
                   $cfiles{$cfname}.="# LCAS module configuration for module $modname generated by ncm-lcas\n";
                   $cfiles{$cfname}.="# DO NOT EDIT BY HAND -- edit node configuration instead\n";
                   $cfiles{$cfname}.="#\n";                  
                };


                if ( $mod_config->{conf}->{content}) ) {
                    foreach my $line (@{$mod_config->{conf}->{content}}) {
                      $cfiles{$cfname}.=$line."\n";
                    }
                }
            }
        }
    }

    foreach my $file ( keys %cfiles ) {
        $self->info("Checking $file...");
        my $result = LC::Check::file($file,
                                     backup => ".old",
                                     contents => $cfiles{$file}
                                    );
        if ( $result < 0 ) {
          $self->error("Failed to update file $file\n");
        }
    }

    return 1;
}

1;      # Required for PERL modules


